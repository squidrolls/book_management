<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.bookmanagement.mapper.TextbookMapper">
  <resultMap id="BaseResultMap" type="com.example.bookmanagement.domain.Textbook">
    <id column="ISBN" jdbcType="CHAR" property="isbn" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="press" jdbcType="VARCHAR" property="press" />
    <result column="publish_date" jdbcType="DATE" property="publishDate" />
    <result column="book_link" jdbcType="VARCHAR" property="bookLink" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ISBN, book_name, author, press, publish_date, book_link
  </sql>
  <select id="selectByExample" parameterType="com.example.bookmanagement.domain.TextbookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from textbook
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from textbook
    where ISBN = #{isbn,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from textbook
    where ISBN = #{isbn,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.bookmanagement.domain.TextbookExample">
    delete from textbook
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.bookmanagement.domain.Textbook">
    insert into textbook (ISBN, book_name, author, 
      press, publish_date, book_link
      )
    values (#{isbn,jdbcType=CHAR}, #{bookName,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{press,jdbcType=VARCHAR}, #{publishDate,jdbcType=DATE}, #{bookLink,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.bookmanagement.domain.Textbook">
    insert into textbook
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="isbn != null">
        ISBN,
      </if>
      <if test="bookName != null">
        book_name,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="press != null">
        press,
      </if>
      <if test="publishDate != null">
        publish_date,
      </if>
      <if test="bookLink != null">
        book_link,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="isbn != null">
        #{isbn,jdbcType=CHAR},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="press != null">
        #{press,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null">
        #{publishDate,jdbcType=DATE},
      </if>
      <if test="bookLink != null">
        #{bookLink,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.bookmanagement.domain.TextbookExample" resultType="java.lang.Long">
    select count(*) from textbook
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update textbook
    <set>
      <if test="record.isbn != null">
        ISBN = #{record.isbn,jdbcType=CHAR},
      </if>
      <if test="record.bookName != null">
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.press != null">
        press = #{record.press,jdbcType=VARCHAR},
      </if>
      <if test="record.publishDate != null">
        publish_date = #{record.publishDate,jdbcType=DATE},
      </if>
      <if test="record.bookLink != null">
        book_link = #{record.bookLink,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update textbook
    set ISBN = #{record.isbn,jdbcType=CHAR},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      press = #{record.press,jdbcType=VARCHAR},
      publish_date = #{record.publishDate,jdbcType=DATE},
      book_link = #{record.bookLink,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.bookmanagement.domain.Textbook">
    update textbook
    <set>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="press != null">
        press = #{press,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null">
        publish_date = #{publishDate,jdbcType=DATE},
      </if>
      <if test="bookLink != null">
        book_link = #{bookLink,jdbcType=VARCHAR},
      </if>
    </set>
    where ISBN = #{isbn,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.bookmanagement.domain.Textbook">
    update textbook
    set book_name = #{bookName,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      press = #{press,jdbcType=VARCHAR},
      publish_date = #{publishDate,jdbcType=DATE},
      book_link = #{bookLink,jdbcType=VARCHAR}
    where ISBN = #{isbn,jdbcType=CHAR}
  </update>
</mapper>