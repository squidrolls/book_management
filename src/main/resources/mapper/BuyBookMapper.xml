<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.bookmanagement.mapper.BuyBookMapper">
  <resultMap id="BaseResultMap" type="com.example.bookmanagement.domain.BuyBook">
    <id column="buy_id" jdbcType="INTEGER" property="buyId" />
    <result column="teacher_id" jdbcType="INTEGER" property="teacherId" />
    <result column="open_id" jdbcType="CHAR" property="openId" />
    <result column="ISBN" jdbcType="CHAR" property="isbn" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="press" jdbcType="VARCHAR" property="press" />
    <result column="publish_date" jdbcType="DATE" property="publishDate" />
    <result column="admin_id" jdbcType="INTEGER" property="adminId" />
    <result column="buy_status" jdbcType="INTEGER" property="buyStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    buy_id, teacher_id, open_id, ISBN, book_name, author, press, publish_date, admin_id, 
    buy_status
  </sql>
  <select id="selectByExample" parameterType="com.example.bookmanagement.domain.BuyBookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from buy_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from buy_book
    where buy_id = #{buyId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from buy_book
    where buy_id = #{buyId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.bookmanagement.domain.BuyBookExample">
    delete from buy_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.bookmanagement.domain.BuyBook">
    insert into buy_book (buy_id, teacher_id, open_id, 
      ISBN, book_name, author, 
      press, publish_date, admin_id, 
      buy_status)
    values (#{buyId,jdbcType=INTEGER}, #{teacherId,jdbcType=INTEGER}, #{openId,jdbcType=CHAR}, 
      #{isbn,jdbcType=CHAR}, #{bookName,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{press,jdbcType=VARCHAR}, #{publishDate,jdbcType=DATE}, #{adminId,jdbcType=INTEGER}, 
      #{buyStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.bookmanagement.domain.BuyBook">
    insert into buy_book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="buyId != null">
        buy_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="isbn != null">
        ISBN,
      </if>
      <if test="bookName != null">
        book_name,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="press != null">
        press,
      </if>
      <if test="publishDate != null">
        publish_date,
      </if>
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="buyStatus != null">
        buy_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="buyId != null">
        #{buyId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=CHAR},
      </if>
      <if test="isbn != null">
        #{isbn,jdbcType=CHAR},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="press != null">
        #{press,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null">
        #{publishDate,jdbcType=DATE},
      </if>
      <if test="adminId != null">
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="buyStatus != null">
        #{buyStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.bookmanagement.domain.BuyBookExample" resultType="java.lang.Long">
    select count(*) from buy_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update buy_book
    <set>
      <if test="record.buyId != null">
        buy_id = #{record.buyId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.openId != null">
        open_id = #{record.openId,jdbcType=CHAR},
      </if>
      <if test="record.isbn != null">
        ISBN = #{record.isbn,jdbcType=CHAR},
      </if>
      <if test="record.bookName != null">
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.press != null">
        press = #{record.press,jdbcType=VARCHAR},
      </if>
      <if test="record.publishDate != null">
        publish_date = #{record.publishDate,jdbcType=DATE},
      </if>
      <if test="record.adminId != null">
        admin_id = #{record.adminId,jdbcType=INTEGER},
      </if>
      <if test="record.buyStatus != null">
        buy_status = #{record.buyStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update buy_book
    set buy_id = #{record.buyId,jdbcType=INTEGER},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      open_id = #{record.openId,jdbcType=CHAR},
      ISBN = #{record.isbn,jdbcType=CHAR},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      press = #{record.press,jdbcType=VARCHAR},
      publish_date = #{record.publishDate,jdbcType=DATE},
      admin_id = #{record.adminId,jdbcType=INTEGER},
      buy_status = #{record.buyStatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.bookmanagement.domain.BuyBook">
    update buy_book
    <set>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=CHAR},
      </if>
      <if test="isbn != null">
        ISBN = #{isbn,jdbcType=CHAR},
      </if>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="press != null">
        press = #{press,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null">
        publish_date = #{publishDate,jdbcType=DATE},
      </if>
      <if test="adminId != null">
        admin_id = #{adminId,jdbcType=INTEGER},
      </if>
      <if test="buyStatus != null">
        buy_status = #{buyStatus,jdbcType=INTEGER},
      </if>
    </set>
    where buy_id = #{buyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.bookmanagement.domain.BuyBook">
    update buy_book
    set teacher_id = #{teacherId,jdbcType=INTEGER},
      open_id = #{openId,jdbcType=CHAR},
      ISBN = #{isbn,jdbcType=CHAR},
      book_name = #{bookName,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      press = #{press,jdbcType=VARCHAR},
      publish_date = #{publishDate,jdbcType=DATE},
      admin_id = #{adminId,jdbcType=INTEGER},
      buy_status = #{buyStatus,jdbcType=INTEGER}
    where buy_id = #{buyId,jdbcType=INTEGER}
  </update>
</mapper>